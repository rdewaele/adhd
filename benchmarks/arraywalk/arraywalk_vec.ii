template <typename INDEX_T>
INDEX_T ArrayWalk<INDEX_T>::timedwalk_vec(uint_fast32_t steps, uint64_t & cycles, uint64_t & reads)
{
	uint64_t cStart, cEnd;
	constexpr long unsigned mb_reads = (1 << 20) / sizeof(INDEX_T);
	constexpr unsigned indep = 15;
	INDEX_T * const idxs = new INDEX_T[indep];
	for (INDEX_T idx = 0; idx < indep; ++idx)
		idxs[idx] = randomIndex(0);

	reads = steps * indep * mb_reads;

	cStart = rdtsc();
	for (uint_fast32_t step = 0; step < steps; ++step)
		for (int i = 0; i < mb_reads; ++i)
			for (INDEX_T idx = 0; idx < indep; ++idx)
				idxs[idx] = array[idxs[idx]];
	cEnd = rdtsc();

	cycles = cEnd - cStart;
	INDEX_T sum = 0;
	for (int i = 0; i < indep; ++i)
		sum = static_cast<INDEX_T>(sum + idxs[i]);
	delete idxs;
	return sum;
}
